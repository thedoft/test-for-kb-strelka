{"version":3,"sources":["components/Home.js","components/Point.js","components/PointList.js","components/Map.js","components/App.js","reportWebVitals.js","index.js"],"names":["Home","className","to","Point","props","point","properties","name","rating","onClick","PointList","points","map","index","onPointClick","Map","pointCollection","useState","markers","setMarkers","mapContainer","useRef","setMap","lng","lat","zoom","mapState","setMapState","useEffect","mapboxgl","container","current","style","center","on","addSource","type","data","addLayer","id","source","addControl","NavigationControl","getCenter","toFixed","getZoom","remove","forEach","geometry","coordinates","popup","Popup","closeButton","setText","marker","Marker","setLngLat","setPopup","addTo","openedPopupMarker","find","getPopup","isOpen","togglePopup","ref","App","exact","path","workerClass","MapboxWorker","accessToken","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.af3cc844.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default function Home() {\n  return (\n    <div className=\"home\">\n      <h1 className=\"home__title\">Туристические точки притяжения Калиниграда</h1>\n      <NavLink className=\"home__navlink\" to=\"/map\">\n        <button className=\"button home__button\">Перейти к карте</button>\n      </NavLink>\n      <div className=\"home__overlay\" />\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Point(props) {\n  const { name, rating } = props.point.properties;\n\n  const handleClick = () => {\n    props.onClick(props.point);\n  };\n\n  return (\n    <li className=\"point\">\n      <p className=\"point__place-name\" onClick={handleClick}>\n        {name}, рейтинг: <b>{rating}</b>\n      </p>\n    </li>\n  );\n}\n","import React from 'react';\n\nimport Point from './Point';\n\nexport default function PointList(props) {\n  return (\n    <ul className=\"point-list\">\n      {props.points.map((point, index) => (\n        <Point point={point} key={index} onClick={props.onPointClick} />\n      ))}\n    </ul>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl';\nimport MapboxWorker from 'mapbox-gl/dist/mapbox-gl-csp-worker';\n\nimport PointList from './PointList';\n\nimport * as pointCollection from '../points.json';\n\nmapboxgl.workerClass = MapboxWorker;\nmapboxgl.accessToken = 'pk.eyJ1IjoidGhlZG9mdCIsImEiOiJja2thMjl0aGwwMG9yMndwaWY4M2ptZHBvIn0.8EEq1Pq2hDrZUuIlupJBdQ';\n\nexport default function Map() {\n  const points = pointCollection.features;\n  const [markers, setMarkers] = useState([]);\n\n  const mapContainer = useRef(null);\n\n  const [map, setMap] = useState(null);\n  const [mapState, setMapState] = useState({\n    lng: 20.5101,\n    lat: 54.7101,\n    zoom: 11.00,\n  });\n\n  const handlePointClick = (point) => {\n    const openedPopupMarker = markers.find((marker) => marker.getPopup().isOpen());\n\n    if (openedPopupMarker) {\n      openedPopupMarker.togglePopup();\n    }\n\n    point.marker.togglePopup();\n  };\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [mapState.lng, mapState.lat],\n      zoom: mapState.zoom,\n    });\n\n    map.on('load', () => {\n      map.addSource('points', {\n        type: 'geojson',\n        data: pointCollection.default,\n      });\n\n      map.addLayer({\n        id: 'points',\n        type: 'symbol',\n        source: 'points',\n      });\n\n      map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n\n      setMap(map);\n    });\n\n    map.on('move', () => {\n      setMapState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (map) {\n      points.forEach((point) => {\n        const [ lng, lat ] = point.geometry.coordinates;\n        const { name, rating } = point.properties;\n\n        const popup = new mapboxgl.Popup({ closeButton: false })\n          .setText(`${name}, рейтинг: ${rating}`);\n\n        const marker = new mapboxgl.Marker()\n          .setLngLat([ lng, lat ])\n          .setPopup(popup)\n          .addTo(map);\n\n        point.marker = marker;\n        setMarkers(markers => [...markers, marker]);\n      });\n    }\n    return;\n  }, [map, points]);\n\n  return (\n    <div className=\"map\">\n      <div className=\"map__left-column\">\n        <div className=\"map__header\">\n          <h1 className=\"map__title\">Список мест</h1>\n          <NavLink to=\"/\">\n            <button className=\"button map__back-button\">Назад</button>\n          </NavLink>\n        </div>\n        <PointList points={points} onPointClick={handlePointClick} />\n      </div>\n\n      <div className=\"map__right-column\" ref={mapContainer}>\n        <p className=\"map__coordinates\">Долгота: {mapState.lng} | Широта: {mapState.lat} | Зум: {mapState.zoom}</p>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Home from './Home';\nimport Map from './Map';\n\nexport default function App() {\n  return (\n    <main className=\"main\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n\n        <Route path=\"/map\">\n          <Map />\n        </Route>\n\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </main>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'normalize.css';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './index.css';\n\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.NODE_ENV === 'production' ? '/test-for-kb-strelka' : '/'}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}